spring:

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: MediaHubHikari
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000       # 30s
      idle-timeout: 600000            # 10m
      max-lifetime: 1800000           # 30m (keep < PG default 8h)
      #leak-detection-threshold: 20000 # 20s (enable if diagnosing leaks)
      data-source-properties:
        reWriteBatchedInserts: true   # PostgreSQL batch insert optimization
        stringtype: unspecified       # Safer for Long/UUID/text casts

  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml
    enabled: true
    contexts: local

  jpa:
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 100
          time_zone: UTC
        order_inserts: true
        order_updates: true
        generate_statistics: false
        format_sql: true

#  cache:
#    type: caffeine
#    cache-names: auditEvents
#    caffeine:
#      spec: maximumSize=10000,expireAfterWrite=10m

  jackson:
    time-zone: UTC
    serialization:
      write-dates-as-timestamps: false
      indent-output: false

server:
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain,text/css,application/javascript
    min-response-size: 1KB

app:
  cache:
    caffeine:
      enabled: true
      transaction-aware: true
      caches:
        - name: sharedShortLived
          maximumSize: 500
          expireAfterWrite: 30s
        - name: sharedMediumLived
          maximumSize: 2500
          expireAfterWrite: 5m
        - name: sharedLongLived
          maximumSize: 5000
          expireAfterWrite: 1h

        - name: localShortLived
          maximumSize: 500
          expireAfterWrite: 30s
        - name: localMediumLived
          maximumSize: 2500
          expireAfterWrite: 5m
        - name: localLongLived
          maximumSize: 5000
          expireAfterWrite: 1h
    redis:
      enabled: true
      transaction-aware: true
      lettuce:
        host: ${APP_CACHE_REDIS_HOST} # localhost
        port: ${APP_CACHE_REDIS_PORT} # 6379
        password: ${APP_CACHE_REDIS_PASSWORD} # test
        ssl: ${APP_CACHE_REDIS_SENTINEL:false} # true
        sentinel: ${APP_CACHE_REDIS_SENTINEL:false} # true
        sentinelMaster: ${APP_CACHE_REDIS_SENTINEL_MASTER:} # myMaster
        sentinelNodes: ${APP_CACHE_REDIS_SENTINEL_NODES:}
  #        - redis-sentinel-1.example.com:26379 # APP_CACHE_REDIS_SENTINEL_NODES_0
  #        - redis-sentinel-2.example.com:26379 # APP_CACHE_REDIS_SENTINEL_NODES_1
  #        - redis-sentinel-3.example.com:26379 # APP_CACHE_REDIS_SENTINEL_NODES_2
        command-timeout: 5s
        connect-timeout: 2s
        shutdown-timeout: 0s
        pool:
          enabled: true
          max-total: 8
          max-idle: 4
          min-idle: 2
          max-wait: 1s
        transactions-pool:
          enabled: true
          max-total: 18
          max-idle: 10
          min-idle: 3
          max-wait: 1s
      defaults:
        ttl: 30s
        value-serializer: json  # Mandatory. Recommended to define it only at default level, unless something specifically is needed per cache.
      caches:
        - name: sharedShortLived
          ttl: 1m
          value-serializer: json # Optional at cache level.
        - name: sharedMediumLived
          ttl: 10m
          value-serializer: json # Optional at cache level.
        - name: sharedLongLived
          ttl: 2h
          value-serializer: json # Optional at cache level.

        - name: shortLived
          ttl: 30s
          value-serializer: json # Optional at cache level.
        - name: mediumLived
          ttl: 5m
          value-serializer: json # Optional at cache level.
        - name: longLived
          ttl: 1h
          value-serializer: json # Optional at cache level.
    two-level:
      enabled: true
      caches:
        - sharedShortLived
        - sharedMediumLived
        - sharedLongLived

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      region: ${REGION:eu}
      environment: ${ENVIRONMENT:prod}
  observations:
    key-values:
      application: ${spring.application.name}
      region: ${REGION:eu}
      environment: ${ENVIRONMENT:prod}

logging:
  config: ${LOGGING_CONFIG_PATH:classpath:log4j2-spring.xml}
  level:
    root: DEBUG
    org.springframework.web: DEBUG                 # Detailed request mapping logs
    org.springframework.security: DEBUG            # See auth flow
    org.springframework.boot.autoconfigure: DEBUG # See which auto-configs are applied
    org.hibernate.SQL: DEBUG                       # Show SQL statements
    org.hibernate.orm.jdbc.bind: TRACE             # Show SQL params (Hibernate 6+)
    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: WARN
    com.zaxxer.hikari: DEBUG                        # Connection pool activity
    org.apache.catalina: INFO                       # Embedded Tomcat startup info
    liquibase: DEBUG                                # Detailed migration logs
    liquibase.changelog: DEBUG                      # Show each changeset applied
    liquibase.executor: DEBUG                       # Show SQL executed by Liquibase
    org.springframework.cache: DEBUG                # Cache hits/misses
